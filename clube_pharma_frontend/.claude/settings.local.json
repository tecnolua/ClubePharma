{
  "permissions": {
    "allow": [
      "Bash(python:*)",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI4NmM2N2ZmZS1kYzYxLTQ4MGUtOTYwYi1jMDYyNmM2ZDhlMjAiLCJpYXQiOjE3NjE1Mjc3NjYsImV4cCI6MTc2MjEzMjU2Nn0.4SYK4I9mLMIjcdv0ga5PwtGvrcikz_O8BRHYboPpEy0\")",
      "Bash(DATABASE_URL=\"postgresql://postgres:postgres@localhost:5432/clube_pharma_bd?schema=public\" npx prisma migrate dev:*)",
      "Bash(powershell -Command:*)",
      "Bash(curl:*)",
      "Read(//c/Users/Luana/Documents/Work/ClubePharma/clube_pharma_backend/**)",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI3OGM3YTdlOC0wYzcxLTQ4MmEtYjMyOS02NWVmNzc2M2RlNDMiLCJpYXQiOjE3NjE1Njk4NDEsImV4cCI6MTc2MjE3NDY0MX0.igVfQNjXQDdIdgXud_wyGHf2vr8e5bjKHmxsBDCh8gE\")",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI3OGM3YTdlOC0wYzcxLTQ4MmEtYjMyOS02NWVmNzc2M2RlNDMiLCJpYXQiOjE3NjE1Njk4ODcsImV4cCI6MTc2MjE3NDY4N30.a92hq4KUunHkJvCalzJANFT39Fc3HxRpdivl3nqrrt8\")",
      "Bash(flutter analyze:*)",
      "Bash(gh repo create:*)",
      "Bash(git config:*)",
      "Bash(test:*)",
      "Bash(cat:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nInitial commit - ClubePharma Backend API v1.0\n\nSistema completo de gestÃ£o de saÃºde e farmÃ¡cia desenvolvido durante 7 dias de desenvolvimento intensivo.\n\n## Funcionalidades Implementadas\n\n### Dia 1-3: AutenticaÃ§Ã£o e GestÃ£o de SaÃºde\n- Sistema completo de autenticaÃ§Ã£o com JWT\n- Gerenciamento de perfil de usuÃ¡rios\n- CRUD de membros da famÃ­lia (plano FAMILY)\n- Sistema de tratamentos e medicamentos\n- Controle de tomada de medicamentos (Pill Takes)\n- Planos: BASIC e FAMILY\n\n### Dia 4: Upload de Receitas e Exames\n- Upload de receitas mÃ©dicas (PDF/IMG)\n- Upload de exames mÃ©dicos\n- OrganizaÃ§Ã£o por categorias\n- Download de arquivos\n- ValidaÃ§Ã£o de tipo e tamanho (max 10MB)\n- Multer configurado com seguranÃ§a\n\n### Dia 5: E-commerce de FarmÃ¡cia\n- CRUD de produtos (admin)\n- Sistema de categorias\n- Busca e filtros avanÃ§ados\n- Carrinho de compras com cÃ¡lculo automÃ¡tico de descontos\n- HistÃ³rico de pedidos\n- 10 produtos seedados para testes\n\n### Dia 6: Consultas e MÃ©dicos\n- CRUD de mÃ©dicos/especialistas (admin)\n- Sistema de agendamento de consultas\n- Filtros por especialidade, localizaÃ§Ã£o e rating\n- Minhas consultas\n- Reagendamento e cancelamento\n- Flag de telemedicina\n- 3 mÃ©dicos seedados para testes\n\n### Dia 7: Pagamentos e Extras\n- IntegraÃ§Ã£o completa com Mercado Pago\n- Webhooks de confirmaÃ§Ã£o de pagamento\n- Sistema de cupons/promoÃ§Ãµes (PERCENTAGE e FIXED)\n- NotificaÃ§Ãµes por email (Nodemailer)\n- Dashboard admin com estatÃ­sticas\n- ProteÃ§Ã£o de rotas admin\n\n## Tecnologias Utilizadas\n\n- Node.js + Express\n- Prisma ORM + PostgreSQL\n- JWT para autenticaÃ§Ã£o\n- Multer para upload de arquivos\n- Mercado Pago SDK\n- Nodemailer para emails\n- bcryptjs para hash de senhas\n- express-validator\n\n## Endpoints\n\nTotal de 91 endpoints divididos em 14 mÃ³dulos:\n- AutenticaÃ§Ã£o (7 endpoints)\n- UsuÃ¡rios (5 endpoints)\n- Membros da FamÃ­lia (5 endpoints)\n- Tratamentos (7 endpoints)\n- Pill Takes (8 endpoints)\n- Receitas (6 endpoints)\n- Exames (6 endpoints)\n- Produtos (7 endpoints)\n- Carrinho (6 endpoints)\n- Pedidos (8 endpoints)\n- MÃ©dicos (6 endpoints)\n- Consultas (8 endpoints)\n- Pagamentos (6 endpoints)\n- Cupons (5 endpoints)\n- Dashboard Admin (5 endpoints)\n\n## SeguranÃ§a\n\n- Senhas hasheadas com bcrypt (10 rounds)\n- Tokens JWT com expiraÃ§Ã£o de 7 dias\n- ValidaÃ§Ã£o de entrada em todos os endpoints\n- ProteÃ§Ã£o contra SQL Injection (Prisma)\n- Middleware de autenticaÃ§Ã£o\n- Middleware de autorizaÃ§Ã£o admin\n- Upload de arquivos com validaÃ§Ã£o rigorosa\n- CORS configurado\n\n## Desenvolvido por\n\n@tecnolua - Luana Silva (Bochecha) ðŸ˜„\n\nGenerated with Claude Code (https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git branch:*)",
      "Bash(flutter pub get:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nInitial commit - ClubePharma Frontend v1.0\n\nApp mobile Flutter de gestÃ£o de saÃºde e farmÃ¡cia integrado com backend completo.\n\n## Funcionalidades Implementadas\n\n### AutenticaÃ§Ã£o e Perfil\n- Tela de login com validaÃ§Ã£o\n- Tela de registro com suporte a planos (BASIC/FAMILY)\n- Logout com confirmaÃ§Ã£o\n- ExibiÃ§Ã£o dinÃ¢mica de dados do usuÃ¡rio\n- IntegraÃ§Ã£o completa com AuthProvider\n\n### FarmÃ¡cia E-commerce\n- Listagem de produtos com dados reais da API\n- Busca de produtos\n- ExibiÃ§Ã£o de preÃ§os e descontos\n- CÃ¡lculo automÃ¡tico de desconto percentual\n- Badge de estoque (disponÃ­vel/esgotado)\n- Adicionar ao carrinho com feedback\n- Resumo do carrinho com total\n- IntegraÃ§Ã£o com ProductProvider e CartProvider\n\n### Tratamentos e Medicamentos\n- Listagem de tratamentos ativos\n- ExibiÃ§Ã£o de medicaÃ§Ã£o, dosagem e frequÃªncia\n- CÃ¡lculo de dias restantes do tratamento\n- Progresso visual do tratamento\n- IntegraÃ§Ã£o com TreatmentProvider\n\n### Consultas MÃ©dicas\n- IntegraÃ§Ã£o inicial com DoctorProvider\n- IntegraÃ§Ã£o inicial com AppointmentProvider\n- UI existente pronta para conexÃ£o com dados reais\n\n### FamÃ­lia\n- UI para gerenciamento de membros (plano FAMILY)\n- Estrutura pronta para integraÃ§Ã£o futura\n\n### Arquitetura e Infraestrutura\n\n#### State Management\n- Provider pattern (ChangeNotifier)\n- 8 providers implementados:\n  - AuthProvider (login, registro, logout)\n  - UserProvider (perfil do usuÃ¡rio)\n  - TreatmentProvider (tratamentos)\n  - ProductProvider (produtos da farmÃ¡cia)\n  - CartProvider (carrinho de compras)\n  - OrderProvider (pedidos)\n  - DoctorProvider (mÃ©dicos)\n  - AppointmentProvider (consultas)\n\n#### API Integration\n- Dio HTTP client configurado\n- Interceptors para JWT automÃ¡tico\n- 91 endpoints mapeados\n- Tratamento de erros padronizado\n- Loading states em todas as operaÃ§Ãµes\n- Refresh token automÃ¡tico\n\n#### Services Layer\n- AuthService (autenticaÃ§Ã£o completa)\n- UserService (gestÃ£o de usuÃ¡rios)\n- TreatmentService (CRUD tratamentos)\n- ProductService (farmÃ¡cia)\n- CartService (carrinho)\n- OrderService (pedidos)\n- DoctorService (mÃ©dicos)\n- AppointmentService (consultas)\n- FamilyService (membros da famÃ­lia)\n- PillTakeService (tomada de medicamentos)\n\n#### Design System\n- Material Design 3\n- Tema claro e escuro\n- AppColors customizados\n- Componentes reutilizÃ¡veis:\n  - CollapsibleBannerWrapper (banner retrÃ¡til)\n  - ClubePharmaLogo\n  - Cards personalizados\n- NavegaÃ§Ã£o por tabs (6 tabs)\n\n## SeguranÃ§a\n- Tokens JWT armazenados com flutter_secure_storage\n- Interceptors automÃ¡ticos para autenticaÃ§Ã£o\n- ValidaÃ§Ã£o de formulÃ¡rios\n- Tratamento de erros de API\n\n## Tecnologias\n\n- Flutter SDK\n- Dart\n- Provider (state management)\n- Dio (HTTP client)\n- flutter_secure_storage\n- shared_preferences\n- Material Design 3\n\n## Estrutura do Projeto\n\n```\nlib/\nâ”œâ”€â”€ config/          # ConfiguraÃ§Ãµes (API endpoints, etc)\nâ”œâ”€â”€ models/          # Modelos de dados (14 models)\nâ”œâ”€â”€ providers/       # State management (8 providers)\nâ”œâ”€â”€ screens/         # Telas do app\nâ”‚   â”œâ”€â”€ tabs/       # 6 tabs principais\nâ”‚   â”œâ”€â”€ login_screen.dart\nâ”‚   â””â”€â”€ register_screen.dart\nâ”œâ”€â”€ services/        # Camada de API (10 services)\nâ”œâ”€â”€ theme/           # AppColors e temas\nâ””â”€â”€ widgets/         # Componentes reutilizÃ¡veis\n```\n\n## Status da IntegraÃ§Ã£o\n\nâœ… AutenticaÃ§Ã£o e Perfil - 100%\nâœ… FarmÃ¡cia E-commerce - 100%\nâœ… Tratamentos - 100%\nðŸ”„ Consultas - Providers integrados, UI pendente\nðŸ”„ FamÃ­lia - UI pronta, provider pendente\nðŸ”„ InÃ­cio - Dashboard pendente\n\n## Desenvolvido por\n\n@tecnolua - Luana Silva (Bochecha) ðŸ˜„\n\nGenerated with Claude Code (https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(where:*)",
      "Bash(git remote add:*)",
      "Bash(git commit:*)",
      "Read(//c/Users/Luana/Documents/Work/ClubePharma/**)",
      "Bash(xargs sed:*)",
      "Bash(winget install:*)",
      "Bash(git push:*)"
    ],
    "deny": [],
    "ask": []
  }
}
